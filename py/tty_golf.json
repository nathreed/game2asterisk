{
  "readers": [
    {
      "comment": "regex matches the course listings in the output. use transformer to read out loud with modified format",
      "regex": "^([1-9]+?\\.) .*",
      "action": "noop",
      "outputTransformers": [{
        "type": "replace",
        "captureGroup": 1,
        "replacementValue": "Press ${1} for "
      }]
    },
    {
      "comment": "part 2 of the course selection. Use output transformer to replace the entire thing with empty but still prompt for a number",
      "regex": "Your choice",
      "action": "num",
      "outputTransformers": [{
        "type": "replaceEntireString",
        "replacementValue": ""
      }]
    },
    {
      "comment": "regex matches the how many players will be playing question. Need to use a mulitnum with an input hint because there is no limit to the number of players",
      "regex": "How many players",
      "action": "multinum",
      "inputHint": "Enter a number followed by the pound key."
    },
    {
      "comment": "regex matches question about computer opponent. Use output transformer to change the y/n and use input transformer to read 1/0 for y/n",
      "regex": ".*? computer opponent (\\[y/n\\]\\?)",
      "action": "num",
      "outputTransformers": [{
        "type": "replace",
        "captureGroup": 1,
        "replacementValue": "?"
      }],
      "inputHint": "For a computer opponent, press 1. For no computer opponent, press 0.",
      "inputTransformers": [{
        "type": "digitStrMapping",
        "mappings": {"1": "y", "0": "n"}
      }]
    },
    {
      "comment": "regex matches the enter name prompt and completely erases it and uses just numbers",
      "regex": ".*? name for player ([0-9]+)",
      "action": "processedLiteralReturn",
      "literal": "${1}",
      "outputTransformers": [{
        "type": "replaceEntireString",
        "replacementValue": ""
      }]
    },
    {
      "comment": "regex matches the club chooser prompt and tells the user to enter a number appropriately",
      "regex": ".*?club (\\[([0-9]+)\\-([0-9]+)\\]\\:)",
      "action": "multinum",
      "inputHint": "Enter a number from ${2} to ${3} followed by the pound key.",
      "outputTransformers": [{
        "type": "replace",
        "captureGroup": 1,
        "replacementValue": ""
      }]
    },
    {
      "comment": "regex matches the power chooser prompt and tells the user to enter a number appropriately",
      "regex": ".*?(?:Power|power) (\\[([0-9]+)\\-([0-9]+)\\]\\:)",
      "action": "multinum",
      "inputHint": "Enter a number from ${2} to ${3} followed by the pound key.",
      "outputTransformers": [{
        "type": "replaceEntireString",
        "replacementValue": "Choose your power"
      }]
    },
    {
      "comment": "regex matches the do you want to play again question. Use transformer to change the y/n to a nicer format and uses input transformer to read that format.",
      "regex": ".*? play again (\\(y/n\\)\\?)",
      "action": "num",
      "outputTransformers": [{
        "type": "replace",
        "captureGroup": 1,
        "replacementValue": "?"
      }],
      "inputHint": "To play again, press 1. To quit, press 0.",
      "inputTransformers": [{
        "type": "digitStrMapping",
        "mappings": {"1": "y", "0": "n"}
      }]
    }
  ],
  "target": ["java", "-cp", "golf/", "Main"]
}